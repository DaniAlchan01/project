from django.shortcuts import render, redirect
from django.contrib.auth import login, update_session_auth_hash, get_user_model
from django.contrib.auth.decorators import login_required
from django.contrib.auth.forms import SetPasswordForm
from django.contrib.auth import get_user_model
from django import forms
from django.shortcuts import render
from django.contrib import messages
from .forms import (
    RegisterForm, LoginForm, UpdateProfileForm, ChangePasswordForm,
    PasswordResetByLoginForm, ChangeUsernameForm
)
import os

User = get_user_model()

def register_view(request):
    if request.method == "POST":
        form = RegisterForm(request.POST)
        if form.is_valid():
            user = form.save()
            login(request, user)
            return redirect("/")
    else:
        form = RegisterForm()
    return render(request, "userauth/register.html", {"form": form})

def login_view(request):
    if request.method == "POST":
        form = LoginForm(request, data=request.POST)
        if form.is_valid():
            user = form.get_user()
            login(request, user)
            return redirect("/")
    else:
        form = LoginForm()
    return render(request, "userauth/login.html", {"form": form})


@login_required
def update_profile_view(request):
    user = request.user  # –¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å

    if request.method == "POST":
        form = UpdateProfileForm(request.POST, request.FILES, instance=user)

        if form.is_valid():
            new_avatar = request.FILES.get("avatar")

            if new_avatar:
                # üìå –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø—É—Ç—å –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∞–≤–∞—Ç–∞—Ä –≤ –ø–∞–ø–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                user.avatar = new_avatar

            user.save()  # ‚úÖ –¢–µ–ø–µ—Ä—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç –∏ –æ–±–Ω–æ–≤–∏—Ç –ø—É—Ç—å –≤ –ë–î
            messages.success(request, "–ü—Ä–æ—Ñ–∏–ª—å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª—ë–Ω!")
            return redirect("main:account")

    else:
        form = UpdateProfileForm(instance=user)

    return render(request, "userauth/update_profile.html", {"form": form})

@login_required
def change_password_view(request):
    if request.method == "POST":
        form = ChangePasswordForm(user=request.user, data=request.POST)
        if form.is_valid():
            user = form.save()
            update_session_auth_hash(request, user)
            return redirect("main:account")
    else:
        form = ChangePasswordForm(user=request.user)
    return render(request, "userauth/change_password.html", {"form": form})

def password_reset_by_login_view(request):
    if request.method == "POST":
        form = PasswordResetByLoginForm(request.POST)
        if form.is_valid():
            username = form.cleaned_data["username"]
            user = User.objects.filter(username=username).first()

            if user is None:
                form.add_error("username", "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º –ª–æ–≥–∏–Ω–æ–º –Ω–µ –Ω–∞–π–¥–µ–Ω.")
                return render(request, "userauth/password_reset_by_login.html", {"form": form})

            request.session["reset_user_id"] = user.id
            return redirect("userauth:password_reset_confirm")
    else:
        form = PasswordResetByLoginForm()

    return render(request, "userauth/password_reset_by_login.html", {"form": form})

def password_reset_confirm_view(request):
    user_id = request.session.get('reset_user_id')
    user = User.objects.filter(id=user_id).first()
    if not user:
        return redirect("userauth:password_reset_by_login")

    if request.method == "POST":
        form = SetPasswordForm(user, request.POST)
        if form.is_valid():
            form.save()
            del request.session['reset_user_id']
            return redirect("userauth:password_reset_complete")
    else:
        form = SetPasswordForm(user)
    return render(request, "userauth/password_reset_confirm.html", {"form": form})

def password_reset_complete_view(request):
    return render(request, "userauth/password_reset_complete.html")

@login_required
def change_username_view(request):
    if request.method == "POST":
        form = ChangeUsernameForm(request.POST, instance=request.user)
        if form.is_valid():
            form.save()
            update_session_auth_hash(request, request.user)  # –ß—Ç–æ–±—ã –Ω–µ —Ä–∞–∑–ª–æ–≥–∏–Ω–∏–≤–∞–ª–æ –ø–æ—Å–ª–µ —Å–º–µ–Ω—ã
            return redirect("main:account")  # –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç
    else:
        form = ChangeUsernameForm(instance=request.user)

    return render(request, "userauth/change_username.html", {"form": form})
